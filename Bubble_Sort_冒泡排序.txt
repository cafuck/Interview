//Bubble Sort
/* demo change 10 .. 1  to  1 .. 10
------------------------LOOP 1

----out_loop==10----
|                  |
10 9 8 7 6 5 4 3 2 1
|  |
----
^in_loop==1

----out_loop==10----
|                  |
9 10 8 7 6 5 4 3 2 1
   | |
   ---
   ^in_loop==2

----out_loop==10----
|                  |
9 8 10 7 6 5 4 3 2 1
    | |
    ---
    ^in_loop==3
...

----out_loop==10----
|                  |
9 8 7 6 5 4 3 2 1 10
                |  |
                ----
                ^in_loop==9

------------------------LOOP 2

---out_loop==9---
|               |
9 8 7 6 5 4 3 2 1 10
| |
---
^in_loop==1

---out_loop==9---
|               |
8 9 7 6 5 4 3 2 1 10
  | |
  ---
  ^in_loop==2

---out_loop==9---
|               |
8 7 9 6 5 4 3 2 1 10
    | |
    ---
    ^in_loop==3
...

*/

#include <stdio.h>
#include <stdlib.h>

void bubble_sort(int* array, int array_size)
{
	int out_loop = array_size-1;
	int in_loop = out_loop-1;
	int temp = 0;

	for(temp = 0;out_loop > 0; out_loop --){
		for(in_loop = 0; in_loop < out_loop; in_loop++){
			if(array[in_loop] > array[in_loop +1]){	//need to swap
				temp = *(array + in_loop +1);
				*(array + in_loop +1) = *(array + in_loop);
				*(array + in_loop) = temp;
			}
		}
	}
}

int main()
{
	int i = 0;
	int num[10] = { 0 };
	printf("Please input 10 numbers\n");
	scanf("%d %d %d %d %d %d %d %d %d %d", \
		&num[0], &num[1], &num[2], &num[3], &num[4], \
		&num[5], &num[6], &num[7], &num[8], &num[9]);

	bubble_sort(num, sizeof(num)/sizeof(*num));
	printf("After Sort, arrary now:\n");
	for (i=0; i < 10; i++)
		printf("%d ", num[i]);
	printf("\n");
}
